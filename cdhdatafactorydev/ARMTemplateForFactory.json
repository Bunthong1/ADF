{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "cdhdatafactorytest"
		},
		"LS_Archive_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_Archive'"
		},
		"LS_Scada_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Scada'"
		},
		"LS_Snowflake_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Snowflake'"
		},
		"LS_Archive_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdharchivelakedev.dfs.core.windows.net/"
		},
		"LS_Damstra_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "soloapp-ae-sqlserver.database.windows.net"
		},
		"LS_Damstra_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "nzwaste"
		},
		"LS_Damstra_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "DIWasteNZUser"
		},
		"LS_KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://cdhkeyvaultdev.vault.azure.net/"
		},
		"LS_Landing_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'LS_Landing'"
		},
		"LS_Scada_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "103.24.137.132"
		},
		"LS_Scada_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "wm-kate-valley"
		},
		"LS_Snowflake_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "RAW"
		},
		"LS_Wastetrack1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://v2.wastetrack.net/api/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Wastetrack_ObjectIngestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch snf_table_name API to ADLS",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.snf_table_name",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "SITE_LIST",
									"activities": [
										{
											"name": "Execute ADLS No Paging",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_Wastetrack_Site_List",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"wastetrack_endpoint": {
														"value": "@pipeline().parameters.wastetrack_endpoint",
														"type": "Expression"
													},
													"source_system": {
														"value": "@pipeline().parameters.source_system",
														"type": "Expression"
													},
													"extract_start_tms": {
														"value": "@pipeline().parameters.extract_start_tms",
														"type": "Expression"
													},
													"snf_table_name": {
														"value": "@pipeline().parameters.snf_table_name",
														"type": "Expression"
													},
													"site_name": {
														"value": "@pipeline().parameters.site_name",
														"type": "Expression"
													},
													"run_date": {
														"value": "@pipeline().parameters.extract_start_tms",
														"type": "Expression"
													},
													"secret_name": {
														"value": "@pipeline().parameters.secret_name",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "STATISTICS",
									"activities": [
										{
											"name": "Execute ADLS Statistics",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_Wastetrack_Statisitcs",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"wastetrack_endpoint": {
														"value": "@pipeline().parameters.wastetrack_endpoint",
														"type": "Expression"
													},
													"source_system": {
														"value": "@pipeline().parameters.source_system",
														"type": "Expression"
													},
													"extract_start_tms": {
														"value": "@pipeline().parameters.extract_start_tms",
														"type": "Expression"
													},
													"snf_table_name": {
														"value": "@pipeline().parameters.snf_table_name",
														"type": "Expression"
													},
													"site_name": {
														"value": "@pipeline().parameters.site_name",
														"type": "Expression"
													},
													"run_date": {
														"value": "@formatDateTime(convertFromUtc(utcNow(), 'New Zealand Standard Time'), 'yyyy-MM')",
														"type": "Expression"
													},
													"secret_name": {
														"value": "@pipeline().parameters.secret_name",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "RUNS",
									"activities": [
										{
											"name": "Execute ADLS RUNS",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_Wastetrack_Runs",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"wastetrack_endpoint": {
														"value": "@pipeline().parameters.wastetrack_endpoint",
														"type": "Expression"
													},
													"source_system": {
														"value": "@pipeline().parameters.source_system",
														"type": "Expression"
													},
													"extract_start_tms": {
														"value": "@pipeline().parameters.extract_start_tms",
														"type": "Expression"
													},
													"snf_table_name": {
														"value": "@pipeline().parameters.snf_table_name",
														"type": "Expression"
													},
													"site_name": {
														"value": "@pipeline().parameters.site_name",
														"type": "Expression"
													},
													"run_date": {
														"value": "@pipeline().parameters.extract_start_tms",
														"type": "Expression"
													},
													"secret_name": {
														"value": "@pipeline().parameters.secret_name",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "RUN_DETAILS",
									"activities": [
										{
											"name": "Execute Pipeline1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_Wastetrack_Run_Details",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"wastetrack_endpoint": {
														"value": "@pipeline().parameters.wastetrack_endpoint",
														"type": "Expression"
													},
													"source_system": {
														"value": "@pipeline().parameters.source_system",
														"type": "Expression"
													},
													"extract_start_tms": {
														"value": "@pipeline().parameters.extract_start_tms",
														"type": "Expression"
													},
													"snf_table_name": "RUNS",
													"site_name": {
														"value": "@pipeline().parameters.site_name",
														"type": "Expression"
													},
													"run_date": {
														"value": "@pipeline().parameters.extract_start_tms",
														"type": "Expression"
													},
													"sink_table_name": {
														"value": "@pipeline().parameters.snf_table_name",
														"type": "Expression"
													},
													"secret_name": {
														"value": "@pipeline().parameters.secret_name",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"wastetrack_endpoint": {
						"type": "string",
						"defaultValue": "runs.json"
					},
					"source_system": {
						"type": "string",
						"defaultValue": "Wastetrack"
					},
					"snf_table_name": {
						"type": "string",
						"defaultValue": "RUNS"
					},
					"add_on": {
						"type": "string",
						"defaultValue": "no_paging"
					},
					"site_name": {
						"type": "string",
						"defaultValue": "TCDC"
					},
					"file_ext": {
						"type": "string",
						"defaultValue": "json"
					},
					"extract_start_tms": {
						"type": "string"
					},
					"run_date": {
						"type": "string"
					},
					"secret_name": {
						"type": "string"
					}
				},
				"variables": {
					"dw_insert_tms": {
						"type": "String"
					},
					"tes": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "WasteTrack/WasteTrack_Generic"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T04:25:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Wastetrack_Site_List')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Wastetrack_Statisitcs')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Wastetrack_Runs')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Wastetrack_Run_Details')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Wastetrack_Run_Details')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_LANDING_JSON",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": {
										"value": "@pipeline().parameters.source_system",
										"type": "Expression"
									},
									"DirectoryName": {
										"value": "@concat(pipeline().parameters.site_name,'/',pipeline().parameters.snf_table_name)",
										"type": "Expression"
									},
									"FileName": "@concat(toLower(pipeline().parameters.source_system),'_',toLower(pipeline().parameters.site_name),'_',toLower(pipeline().parameters.snf_table_name),'_',pipeline().parameters.run_date,'.json')"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Lookup1').output.firstRow.runs)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data to Blob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "00:30:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_Wastetrack_Json",
											"type": "DatasetReference",
											"parameters": {
												"RelativeUrl": {
													"value": "@concat('runs/',item().id,'.json')",
													"type": "Expression"
												},
												"SecretName": {
													"value": "@pipeline().parameters.secret_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_LANDING_JSON",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": {
													"value": "@pipeline().parameters.source_system",
													"type": "Expression"
												},
												"DirectoryName": {
													"value": "@concat(pipeline().parameters.site_name, '/', pipeline().parameters.sink_table_name)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(toLower(pipeline().parameters.source_system),'_',toLower(pipeline().parameters.site_name),'_',toLower(pipeline().parameters.sink_table_name),'_',item().id,'_',pipeline().parameters.run_date,'.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data to Snowflake",
									"type": "Copy",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "Copy data to Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "00:30:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_Wastetrack_Json",
											"type": "DatasetReference",
											"parameters": {
												"RelativeUrl": {
													"value": "@concat('runs/',item().id,'.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_LANDING_JSON",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": {
													"value": "@pipeline().parameters.source_system",
													"type": "Expression"
												},
												"DirectoryName": {
													"value": "@concat(pipeline().parameters.site_name, '/', pipeline().parameters.sink_table_name)",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(toLower(pipeline().parameters.source_system),'_',toLower(pipeline().parameters.site_name),'_',toLower(pipeline().parameters.sink_table_name),'_',item().id,'_',pipeline().parameters.run_date,'.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"wastetrack_endpoint": {
						"type": "string",
						"defaultValue": "runs.json"
					},
					"source_system": {
						"type": "string",
						"defaultValue": "wastetrack"
					},
					"extract_start_tms": {
						"type": "string",
						"defaultValue": "2024-10-30"
					},
					"snf_table_name": {
						"type": "string",
						"defaultValue": "RUNS"
					},
					"site_name": {
						"type": "string",
						"defaultValue": "TCDC"
					},
					"run_date": {
						"type": "string",
						"defaultValue": "2024-10-30"
					},
					"file_name": {
						"type": "string",
						"defaultValue": "wastetrack_tcdc_runs_2024-11-18T22:12:25.4201458.json"
					},
					"sink_table_name": {
						"type": "string",
						"defaultValue": "RUN_DETAILS"
					},
					"secret_name": {
						"type": "string"
					}
				},
				"variables": {
					"cek": {
						"type": "String"
					}
				},
				"folder": {
					"name": "WasteTrack/WasteTrack_Generic"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T04:25:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_LANDING_JSON')]",
				"[concat(variables('factoryId'), '/datasets/DS_Wastetrack_Json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Wastetrack_Runs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data to Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Wastetrack_Json",
								"type": "DatasetReference",
								"parameters": {
									"RelativeUrl": {
										"value": "@concat(pipeline().parameters.wastetrack_endpoint,'?date=',pipeline().parameters.run_date)",
										"type": "Expression"
									},
									"SecretName": {
										"value": "@pipeline().parameters.secret_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_LANDING_JSON",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": {
										"value": "@pipeline().parameters.source_system",
										"type": "Expression"
									},
									"DirectoryName": {
										"value": "@concat(pipeline().parameters.site_name, '/', pipeline().parameters.snf_table_name)",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(toLower(pipeline().parameters.source_system),'_',toLower(pipeline().parameters.site_name),'_',toLower(pipeline().parameters.snf_table_name),'_',pipeline().parameters.run_date,'.json')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data to Snowflake",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Copy data to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Wastetrack_Json",
								"type": "DatasetReference",
								"parameters": {
									"RelativeUrl": {
										"value": "@concat(pipeline().parameters.wastetrack_endpoint,'?date=',pipeline().parameters.run_date)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_LANDING_JSON",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": {
										"value": "@pipeline().parameters.source_system",
										"type": "Expression"
									},
									"DirectoryName": {
										"value": "@concat(pipeline().parameters.site_name, '/', pipeline().parameters.snf_table_name)",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(toLower(pipeline().parameters.source_system),'_',toLower(pipeline().parameters.site_name),'_',toLower(pipeline().parameters.snf_table_name),'_',convertFromUtc(utcNow(), 'New Zealand Standard Time'),'.json')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"wastetrack_endpoint": {
						"type": "string",
						"defaultValue": "runs.json"
					},
					"source_system": {
						"type": "string",
						"defaultValue": "wastetrack"
					},
					"extract_start_tms": {
						"type": "string",
						"defaultValue": "2024-10-30"
					},
					"snf_table_name": {
						"type": "string",
						"defaultValue": "RUNS"
					},
					"site_name": {
						"type": "string",
						"defaultValue": "TCDC"
					},
					"run_date": {
						"type": "string",
						"defaultValue": "2024-10-30"
					},
					"file_name": {
						"type": "string",
						"defaultValue": "wastetrack_tcdc_runs_2024-11-18T22:12:25.4201458.json"
					},
					"secret_name": {
						"type": "string"
					}
				},
				"variables": {
					"cek": {
						"type": "String"
					}
				},
				"folder": {
					"name": "WasteTrack/WasteTrack_Generic"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T04:25:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Wastetrack_Json')]",
				"[concat(variables('factoryId'), '/datasets/DS_LANDING_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Wastetrack_SDC_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Control File",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"dataset": {
								"referenceName": "DS_LANDING_EXCEL",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "system",
									"FileName": {
										"value": "@pipeline().parameters.control_file_name",
										"type": "Expression"
									},
									"WorkSheetName": {
										"value": "@pipeline().parameters.site_name",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For each object in control file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Control File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Control File').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "If enable_load",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().enable_load, '1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Execute Pipeline",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_Wastetrack_ObjectIngestion",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"wastetrack_endpoint": {
															"value": "@item().wastetrack_endpoint",
															"type": "Expression"
														},
														"source_system": {
															"value": "@pipeline().parameters.source_system",
															"type": "Expression"
														},
														"snf_table_name": {
															"value": "@item().snf_table_name",
															"type": "Expression"
														},
														"add_on": {
															"value": "@item().add_on",
															"type": "Expression"
														},
														"site_name": {
															"value": "@pipeline().parameters.site_name",
															"type": "Expression"
														},
														"file_ext": {
															"value": "@item().file_ext",
															"type": "Expression"
														},
														"extract_start_tms": {
															"value": "@formatDateTime(convertFromUtc(utcNow(), 'New Zealand Standard Time'), 'yyyy-MM-dd')",
															"type": "Expression"
														},
														"run_date": {
															"value": "@formatDateTime(convertFromUtc(utcNow(), 'New Zealand Standard Time'), 'yyyy-MM')",
															"type": "Expression"
														},
														"secret_name": {
															"value": "@pipeline().parameters.secret_name",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Move file to processed",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "For each object in control file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"waitOnCompletion": true,
							"parameters": {
								"source_system": {
									"value": "@pipeline().parameters.source_system",
									"type": "Expression"
								},
								"extract_start_tms": {
									"value": "@variables('extract_start_tms')",
									"type": "Expression"
								},
								"site_name": {
									"value": "@pipeline().parameters.site_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"source_system": {
						"type": "string",
						"defaultValue": "wastetrack"
					},
					"control_file_name": {
						"type": "string",
						"defaultValue": "Wastetrack_ControlFile.xlsx"
					},
					"site_name": {
						"type": "string",
						"defaultValue": "SDC"
					},
					"secret_name": {
						"type": "string",
						"defaultValue": "sdc-api-key"
					}
				},
				"variables": {
					"test": {
						"type": "Array"
					},
					"extract_start_tms": {
						"type": "String"
					},
					"pipeline_end_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "WasteTrack/WasteTrack_Main"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T04:25:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_LANDING_EXCEL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Wastetrack_ObjectIngestion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Wastetrack_Site_List')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data to Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Wastetrack_Json",
								"type": "DatasetReference",
								"parameters": {
									"RelativeUrl": {
										"value": "@concat(pipeline().parameters.wastetrack_endpoint,'?date=',pipeline().parameters.run_date)",
										"type": "Expression"
									},
									"SecretName": {
										"value": "@pipeline().parameters.secret_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_LANDING_JSON",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": {
										"value": "@pipeline().parameters.source_system",
										"type": "Expression"
									},
									"DirectoryName": {
										"value": "@concat(pipeline().parameters.site_name, '/', pipeline().parameters.snf_table_name)",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(toLower(pipeline().parameters.source_system),'_',toLower(pipeline().parameters.site_name),'_',toLower(pipeline().parameters.snf_table_name),'_',pipeline().parameters.run_date,'.json')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data to Snowflake",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Copy data to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Wastetrack_Json",
								"type": "DatasetReference",
								"parameters": {
									"RelativeUrl": {
										"value": "@concat(pipeline().parameters.wastetrack_endpoint,'?date=',pipeline().parameters.run_date)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_LANDING_JSON",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": {
										"value": "@pipeline().parameters.source_system",
										"type": "Expression"
									},
									"DirectoryName": {
										"value": "@concat(pipeline().parameters.site_name, '/', pipeline().parameters.snf_table_name)",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(toLower(pipeline().parameters.source_system),'_',toLower(pipeline().parameters.site_name),'_',toLower(pipeline().parameters.snf_table_name),'_',convertFromUtc(utcNow(), 'New Zealand Standard Time'),'.json')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"wastetrack_endpoint": {
						"type": "string",
						"defaultValue": "site_list.json"
					},
					"source_system": {
						"type": "string",
						"defaultValue": "wastetrack"
					},
					"extract_start_tms": {
						"type": "string",
						"defaultValue": "2024-10-30"
					},
					"snf_table_name": {
						"type": "string",
						"defaultValue": "SITE_LIST"
					},
					"site_name": {
						"type": "string",
						"defaultValue": "TCDC"
					},
					"run_date": {
						"type": "string",
						"defaultValue": "2024-10-30"
					},
					"file_name": {
						"type": "string",
						"defaultValue": "test.json"
					},
					"secret_name": {
						"type": "string"
					}
				},
				"variables": {
					"cek": {
						"type": "String"
					}
				},
				"folder": {
					"name": "WasteTrack/WasteTrack_Generic"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T04:25:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Wastetrack_Json')]",
				"[concat(variables('factoryId'), '/datasets/DS_LANDING_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Wastetrack_Statisitcs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data to Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Wastetrack_CompressedJson",
								"type": "DatasetReference",
								"parameters": {
									"RelativeUrl": {
										"value": "@concat(replace(pipeline().parameters.wastetrack_endpoint, '{YYYY-MM}', pipeline().parameters.run_date))",
										"type": "Expression"
									},
									"SecretName": {
										"value": "@pipeline().parameters.secret_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_LANDING_JSON",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "wastetrack",
									"DirectoryName": {
										"value": "@concat(pipeline().parameters.site_name, '/', pipeline().parameters.snf_table_name)",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(toLower(pipeline().parameters.source_system),'_',toLower(pipeline().parameters.site_name),'_',toLower(pipeline().parameters.snf_table_name),'_',pipeline().parameters.run_date,'.json')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data to Snowflake",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Copy data to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Wastetrack_CompressedJson",
								"type": "DatasetReference",
								"parameters": {
									"RelativeUrl": {
										"value": "@concat(pipeline().parameters.wastetrack_endpoint,'?date=',pipeline().parameters.run_date)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_LANDING_JSON",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "wastetrack",
									"DirectoryName": {
										"value": "@concat(pipeline().parameters.site_name, '/', pipeline().parameters.snf_table_name)",
										"type": "Expression"
									},
									"FileName": {
										"value": "@concat(toLower(pipeline().parameters.source_system),'_',toLower(pipeline().parameters.site_name),'_',toLower(pipeline().parameters.snf_table_name),'_',pipeline().parameters.run_date,'.json')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"wastetrack_endpoint": {
						"type": "string",
						"defaultValue": "statistics"
					},
					"source_system": {
						"type": "string",
						"defaultValue": "wastetrack"
					},
					"extract_start_tms": {
						"type": "string",
						"defaultValue": "2024-10-30"
					},
					"snf_table_name": {
						"type": "string",
						"defaultValue": "STATISTICS"
					},
					"site_name": {
						"type": "string",
						"defaultValue": "TCDC"
					},
					"run_date": {
						"type": "string",
						"defaultValue": "2024-10"
					},
					"secret_name": {
						"type": "string"
					}
				},
				"variables": {
					"cek": {
						"type": "String"
					}
				},
				"folder": {
					"name": "WasteTrack/WasteTrack_Generic"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T04:25:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Wastetrack_CompressedJson')]",
				"[concat(variables('factoryId'), '/datasets/DS_LANDING_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Wastetrack_TCDC_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Control File",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"dataset": {
								"referenceName": "DS_LANDING_EXCEL",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "system",
									"FileName": {
										"value": "@pipeline().parameters.control_file_name",
										"type": "Expression"
									},
									"WorkSheetName": {
										"value": "@pipeline().parameters.site_name",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For each object in control file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Control File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Control File').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If enable_load",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().enable_load, '1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Execute Pipeline",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_Wastetrack_ObjectIngestion",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"wastetrack_endpoint": {
															"value": "@item().wastetrack_endpoint",
															"type": "Expression"
														},
														"source_system": {
															"value": "@pipeline().parameters.source_system",
															"type": "Expression"
														},
														"snf_table_name": {
															"value": "@item().snf_table_name",
															"type": "Expression"
														},
														"add_on": {
															"value": "@item().add_on",
															"type": "Expression"
														},
														"site_name": {
															"value": "@pipeline().parameters.site_name",
															"type": "Expression"
														},
														"file_ext": {
															"value": "@item().file_ext",
															"type": "Expression"
														},
														"extract_start_tms": {
															"value": "@formatDateTime(convertFromUtc(utcNow(), 'New Zealand Standard Time'), 'yyyy-MM-dd')",
															"type": "Expression"
														},
														"run_date": {
															"value": "@formatDateTime(convertFromUtc(utcNow(), 'New Zealand Standard Time'), 'yyyy-MM')",
															"type": "Expression"
														},
														"secret_name": {
															"value": "@pipeline().parameters.secret_name",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Move file to processed",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "For each object in control file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"waitOnCompletion": true,
							"parameters": {
								"source_system": {
									"value": "@pipeline().parameters.source_system",
									"type": "Expression"
								},
								"extract_start_tms": {
									"value": "@variables('extract_start_tms')",
									"type": "Expression"
								},
								"site_name": {
									"value": "@pipeline().parameters.site_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"source_system": {
						"type": "string",
						"defaultValue": "wastetrack"
					},
					"control_file_name": {
						"type": "string",
						"defaultValue": "Wastetrack_ControlFile.xlsx"
					},
					"site_name": {
						"type": "string",
						"defaultValue": "TCDC"
					},
					"secret_name": {
						"type": "string",
						"defaultValue": "tcdc-api-key"
					}
				},
				"variables": {
					"test": {
						"type": "Array"
					},
					"extract_start_tms": {
						"type": "String"
					},
					"pipeline_end_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "WasteTrack/WasteTrack_Main"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T04:25:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_LANDING_EXCEL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Wastetrack_ObjectIngestion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_LANDING_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Landing",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"WorkSheetName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().WorkSheetName",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Landing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_LANDING_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Landing",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"DirectoryName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().DirectoryName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Landing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SCADA_FTP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Scada",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TOA5",
						"type": "String"
					},
					{
						"name": "CWS-MS05-Weather",
						"type": "String"
					},
					{
						"name": "CR200X",
						"type": "String"
					},
					{
						"name": "23750",
						"type": "String"
					},
					{
						"name": "CR200X.Std.04",
						"type": "String"
					},
					{
						"name": "MS5 V5.CR2",
						"type": "String"
					},
					{
						"name": "5457",
						"type": "String"
					},
					{
						"name": "DHill",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Scada')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SNOWFLAKE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Snowflake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Snowflake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Wastetrack_CompressedJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Wastetrack1",
					"type": "LinkedServiceReference",
					"parameters": {
						"SecretName": {
							"value": "@dataset().SecretName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"RelativeUrl": {
						"type": "string"
					},
					"SecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().RelativeUrl",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "deflate"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Wastetrack1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Wastetrack_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Wastetrack1",
					"type": "LinkedServiceReference",
					"parameters": {
						"SecretName": {
							"value": "@dataset().SecretName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"RelativeUrl": {
						"type": "string"
					},
					"SecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().RelativeUrl",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Wastetrack1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Archive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_Archive_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_Archive_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Damstra')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_Damstra_properties_typeProperties_server')]",
					"database": "[parameters('LS_Damstra_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_Damstra_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "damstra-sql-server-password"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Landing')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('LS_Landing_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Scada')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('LS_Scada_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('LS_Scada_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Scada_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Snowflake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "uo67947.australia-east.azure",
					"user": "bunthong",
					"database": "[parameters('LS_Snowflake_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"role": "ACCOUNTADMIN",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Snowflake_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Wastetrack1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"SecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_Wastetrack1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"X-Wastetrack-API-Key": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "LS_KeyVault",
								"type": "LinkedServiceReference"
							},
							"secretName": {
								"value": "@linkedService().SecretName",
								"type": "Expression"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVault')]"
			]
		}
	]
}
