{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "cdhdatafactorydev"
		},
		"LS_Archive_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_Archive'"
		},
		"LS_Scada_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Scada'"
		},
		"LS_Snowflake_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Snowflake'"
		},
		"LS_Archive_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdharchivelakedev.dfs.core.windows.net/"
		},
		"LS_Damstra_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "soloapp-ae-sqlserver.database.windows.net"
		},
		"LS_Damstra_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "nzwaste"
		},
		"LS_Damstra_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "DIWasteNZUser"
		},
		"LS_KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://cdhkeyvaultdev.vault.azure.net/"
		},
		"LS_Landing_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'LS_Landing'"
		},
		"LS_Scada_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "103.24.137.132"
		},
		"LS_Scada_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "wm-kate-valley"
		},
		"LS_Snowflake_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DEV"
		},
		"LS_Wastetrack1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://v2.wastetrack.net/api/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BeneVap')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_LANDING_EXCEL",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "benevap",
									"FileName": {
										"value": "@coalesce(null)",
										"type": "Expression"
									},
									"WorkSheetName": "@coalesce(null)",
									"Range": "@coalesce(null)"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "SnowflakeV2Sink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "LS_Landing",
												"type": "LinkedServiceReference"
											},
											"path": "benevap"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Timestamp",
														"type": "String"
													},
													"sink": {
														"name": "TIMESTAMP",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Daily Influent (L/d)",
														"type": "String"
													},
													"sink": {
														"name": "DAILY_INFLUENT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Daily Evap (L/d)",
														"type": "String"
													},
													"sink": {
														"name": "DAILY_EVAP",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Antifoam Vol (L/d)",
														"type": "String"
													},
													"sink": {
														"name": "ANTIFOAM_VOL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Up-Time (h.h)",
														"type": "String"
													},
													"sink": {
														"name": "UP_TIME",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Vessel Temp (Â°C)",
														"type": "String"
													},
													"sink": {
														"name": "VESSEL_TEMP",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "Disch Vol (L/d)",
														"type": "String"
													},
													"sink": {
														"name": "DISCH_VOL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "Fuel Cumulative (SCMD)",
														"type": "String"
													},
													"sink": {
														"name": "FUEL_CUMULATIVE",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "DS_LANDING_EXCEL",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": "benevap",
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"WorkSheetName": {
													"value": "Sheet1",
													"type": "Expression"
												},
												"Range": "A4:I1048576"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SNOWFLAKE",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_LANDING_EXCEL')]",
				"[concat(variables('factoryId'), '/datasets/DS_SNOWFLAKE')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_Landing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_LANDING_CSV",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "ems",
									"RelativePath": {
										"value": "@coalesce(null)",
										"type": "Expression"
									},
									"FileName": "@coalesce(null)"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_LANDING_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_LANDING_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Landing",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"RelativePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().RelativePath",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Landing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_LANDING_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Landing",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"WorkSheetName": {
						"type": "string"
					},
					"Range": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().WorkSheetName",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"range": {
						"value": "@dataset().Range",
						"type": "Expression"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Landing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_LANDING_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Landing",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"DirectoryName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().DirectoryName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Landing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SCADA_FTP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Scada",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TOA5",
						"type": "String"
					},
					{
						"name": "CWS-MS05-Weather",
						"type": "String"
					},
					{
						"name": "CR200X",
						"type": "String"
					},
					{
						"name": "23750",
						"type": "String"
					},
					{
						"name": "CR200X.Std.04",
						"type": "String"
					},
					{
						"name": "MS5 V5.CR2",
						"type": "String"
					},
					{
						"name": "5457",
						"type": "String"
					},
					{
						"name": "DHill",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Scada')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SNOWFLAKE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Snowflake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "RAW",
					"table": "BENNEVAP__KENDRA_OPERATING"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Snowflake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Wastetrack_CompressedJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Wastetrack1",
					"type": "LinkedServiceReference",
					"parameters": {
						"SecretName": {
							"value": "@dataset().SecretName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"RelativeUrl": {
						"type": "string"
					},
					"SecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().RelativeUrl",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "deflate"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Wastetrack1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Wastetrack_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Wastetrack1",
					"type": "LinkedServiceReference",
					"parameters": {
						"SecretName": {
							"value": "@dataset().SecretName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"RelativeUrl": {
						"type": "string"
					},
					"SecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().RelativeUrl",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Wastetrack1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Archive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_Archive_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_Archive_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Damstra')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_Damstra_properties_typeProperties_server')]",
					"database": "[parameters('LS_Damstra_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_Damstra_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "damstra-sql-server-password"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Landing')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('LS_Landing_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Scada')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('LS_Scada_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('LS_Scada_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Scada_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Snowflake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "uo67947.australia-east.azure",
					"user": "bunthong",
					"database": "[parameters('LS_Snowflake_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"role": "ACCOUNTADMIN",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Snowflake_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Wastetrack1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"SecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_Wastetrack1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"X-Wastetrack-API-Key": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "LS_KeyVault",
								"type": "LinkedServiceReference"
							},
							"secretName": {
								"value": "@linkedService().SecretName",
								"type": "Expression"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVault')]"
			]
		}
	]
}